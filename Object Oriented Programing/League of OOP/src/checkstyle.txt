Starting audit...
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/common/Constants.java:16:47: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/common/Constants.java:40:43: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/common/Constants.java:65:43: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/common/Constants.java:88:42: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:22:17: Parameter inputFile should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:22:35: Parameter outputFile should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:34:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'playGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'playGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:63:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'endGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'endGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:79: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:79:108: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:89:25: Parameter battleground should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:107: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:107:37: Parameter battleground should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:107:56: Parameter player0 should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:107:80: Parameter player1 should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:111: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:116:63: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:123: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:126: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:129: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:132: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:140: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:150:44: Parameter pcl should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:154:47: Parameter pcl should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/Game.java:158:36: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:6: Using the '.*' form of import should be avoided - player.*. [AvoidStarImport]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:11: Class GameFactory should be declared as final. [FinalClass]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:12:38: Name 'instance' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:20:28: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:20:28: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:22:32: Parameter loadFile should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:22:49: Parameter saveFile should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:31:30: Parameter fs should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:31:63: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/game/GameFactory.java:34:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/main/Main.java:5:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/main/Main.java:6:29: Parameter args should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Cell.java:34:5: Class 'Cell' looks like designed for extension (can be subclassed), but the method 'removePlayerFromCell' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cell' final or making the method 'removePlayerFromCell' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Cell.java:34:38: Parameter player should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Cell.java:38:5: Class 'Cell' looks like designed for extension (can be subclassed), but the method 'enterPlayerInCell' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cell' final or making the method 'enterPlayerInCell' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Cell.java:38:35: Parameter player should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Cell.java:42:5: Class 'Cell' looks like designed for extension (can be subclassed), but the method 'getPlayersInCell' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cell' final or making the method 'getPlayersInCell' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Cell.java:46:5: Class 'Cell' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cell' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Cell.java:49:5: Class 'Cell' looks like designed for extension (can be subclassed), but the method 'getX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cell' final or making the method 'getX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Cell.java:52:5: Class 'Cell' looks like designed for extension (can be subclassed), but the method 'getY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cell' final or making the method 'getY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:7:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:17:27: Parameter n should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:17:31: 'n' hides a field. [HiddenField]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:17:34: Parameter m should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:17:38: 'm' hides a field. [HiddenField]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:23:28: Parameter fs should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:23:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:28:66: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:37:25: Parameter x should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/map/Map.java:37:32: Parameter y should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/AbstractPlayer.java:9:71: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/AbstractPlayer.java:84:41: Parameter hpBeforeBattle should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/AbstractPlayer.java:116: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/AbstractPlayer.java:131:5: Class 'AbstractPlayer' looks like designed for extension (can be subclassed), but the method 'propertyChange' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractPlayer' final or making the method 'propertyChange' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/AbstractPlayer.java:131:32: Parameter evt should be final. [FinalParameters]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/AbstractPlayer.java:141: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Knight.java:121: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Knight.java:126: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Knight.java:133: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Knight.java:142: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:13: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:14: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:18:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:22: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:23: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:24: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:26: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:26:108: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:30:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:34: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:35: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:38: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:38:104: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:42:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:46: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:47: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:50: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:50:104: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:56:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:60: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:61: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:64: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:64:103: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:69:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'attackedBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'attackedBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:74:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'updateMaxHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'updateMaxHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:76: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:82:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getInitialOfClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getInitialOfClass' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:86: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:87:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'applyModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'applyModifiers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:91: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:92:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'calculateFinalDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'calculateFinalDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:93: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:94: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:94:111: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:97: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:98:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'calculateDeflectedDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'calculateDeflectedDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:99: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Pyromancer.java:105: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:14:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:16: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:19:25: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:21: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:25: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:28: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:37:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:39: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:42:25: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:44: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:51: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:60:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:62: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:66: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:67:25: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:69: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:76: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:86:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:88: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:92:25: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:94: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:101: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:111:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'attackedBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'attackedBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:117:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'updateMaxHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'updateMaxHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:125:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getInitialOfClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getInitialOfClass' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:129: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:130:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'applyModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'applyModifiers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:138: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:139:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'calculateFinalDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'calculateFinalDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:140: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:141: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:141:111: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:144: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:145:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'calculateDeflectedDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'calculateDeflectedDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:146: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:147:25: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:150: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:150:126: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:151:96: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:152: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:153: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:156:88: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:157:96: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:158: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Rogue.java:160: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:12:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:14: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:14:107: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:16: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:20:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:22: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:22:107: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:24: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:28:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:30: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:30:107: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:32: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:36:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:38: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:38:107: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:40: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:45:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'attackedBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'attackedBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:50:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'updateMaxHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'updateMaxHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:57: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:58:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getInitialOfClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getInitialOfClass' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:62: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:63:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'applyModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'applyModifiers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:67: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:68:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'calculateFinalDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'calculateFinalDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:69: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:70: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:70:111: '*' should be on a new line. [OperatorWrap]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:74:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'calculateDeflectedDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'calculateDeflectedDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/e/School/A2/S1/POO/Teme/LOOP_1/src/src/player/Wizard.java:75: Line is longer than 100 characters (found 108). [LineLength]
Audit done.
Checkstyle ends with 177 errors.
